# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Move to Backend Folder
        run: |
          cd tasks-backend
          pwd .
          ls -la
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Configure Hatch
        run: |
          pip3 install hatch
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip3 install pytest pytest-cov
          pip3 install pytest-mock
          pip3 install flask
          pip3 install flask-sqlalchemy
          pip3 install flask-migrate
          pip3 install flask-openapi3
          pip3 install behave
          pip3 install mockito
          pip3 install python-dateutil
          pip3 install bcrypt
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  
      - name: Run Unit tests
        run: hatch run unit-tests
      # TODO: Add a coverage functionality
        
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
