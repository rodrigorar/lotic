# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Tasks Backend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          cd tasks-backend
          python -m pip install --upgrade pip
          pip install hatch
          pip install hatchling
          pip install flake8
          python -m pip install -e .
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  
      - name: Run Unit tests
        run: |
          cd tasks-backend
          hatch run unit-tests
      # TODO: Add a coverage functionality
      
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          cd tasks-backend
          python -m pip install --upgrade pip
          pip install hatch
          pip install hatchling
          pip install flake8
          python -m pip install -e .
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  
      - name: Run Unit tests
        run: |
          cd tasks-backend
          hatch run integration-tests
      # TODO: Add a coverage functionality
        
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          cd tasks-backend
          python -m pip install --upgrade pip
          pip install hatch
          pip install hatchling
          pip install flake8
          python -m pip install -e .
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  
      - name: Lint with flake8
        run: |
          cd tasks-backend
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          cd tasks-backend
          python -m pip install --upgrade pip
          pip install hatch
          pip install hatchling
          pip install flake8
          python -m pip install -e .
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  
      - name: Build artifacts
        run: |
          cd tasks-backend
          hatch build
      - name: Get Artifact Name
        run: |
          echo "ARTIFACT_NAME=$(ls tasks-backend/dist/ | grep tasks_server)" >> GITHUB_ENV
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: tasks-backend/dist/tasks_server-*.tar.gz
          if-no-files-found: error
          retention-days: 7
